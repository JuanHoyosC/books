/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

/* @import "@ionic/angular/css/palettes/dark.always.css"; */
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
@import "@ionic/angular/css/palettes/dark.system.css";

* {
  font-family: "Nunito", sans-serif;
  --font-family: "Nunito", sans-serif;
}

ion-item,
ion-list,
ion-list-header,
ion-input {
  --padding: 0;
  --padding-end: 0;
  --padding-start: 0;
  --padding-left: 0;
  --padding-right: 0;
  --inner-padding-end: 0;
  --ion-safe-area-left: 0;
  --ion-safe-area-right: 0;
}

.container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  width: 100%;
  justify-content: center;
  align-items: center;
}

.auth {
  max-width: 412px;
  width: 100%;

  ion-img {
    display: block;
    width: 112px;
    margin: 0 auto;
  }

  ion-list {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  ion-label {
    display: block;
    margin: 0;
    margin-bottom: 8px !important;
  }

  ion-input {
    background-color: #00000011;
    --padding-start: 8px;
    border-radius: 4px;
  }

  ion-button {
    display: block;
    width: 100%;
    min-height: 48px;
  }

  ion-col,
  ion-row,
  ion-grid {
    padding: 0;
  }

  ion-col:first-child {
    padding-right: 8px;
  }

  a {
    text-decoration: none;
    font-weight: var(--font-bold);
  }
}

.w-100 {
  width: 100%;
}

ion-button {
  margin: 0;
}

ion-header,
ion-footer {
  box-shadow: none !important;
}

.required::after {
  content: " *";
  color: var(--ion-color-danger);
}

.error {
  display: block;
  margin-top: 4px;
}

.bubble {
  position: fixed;
  background-color: rgba(var(--ion-color-primary-rgb), 0.3);
  width: var(--bubble-width);
  height: var(--bubble-width);
  border-radius: 50%;
}

.bubble.bottom {
  bottom: calc(-1 * var(--bubble-width) / 3);
}

.bubble.top {
  top: calc(-1 * var(--bubble-width) / 2);
}

.bubble.left {
  left: -32px;
}

.bubble.right {
  right: 10%;
}

.bubble.small {
  --bubble-width: 56px;
}

.no-scroll {
  --overflow: hidden;
  overflow: hidden;
}

.separator-container {
  display: flex;
  align-items: center;
  gap: 8px;
}

.separator {
  display: inline-block;
  width: 120px;
  height: 1px;
  background-color: rgba(110, 110, 110, 0.189);
}

.separator-text {
  min-width: max-content;
}

hr {
  height: 0;
  width: 100%;
  border: 1px solid #eee;
}

ion-modal.right::part(content) {
  right: 0;
}

.min-content {
  --max-width: min-content;
}

.border-bottom {
  border-bottom: 1px solid rgba(var(--ion-color-primary-rgb), 0.25);
}

.border-top {
  border-top: 1px solid rgba(var(--ion-color-primary-rgb), 0.25);
}


ion-item.active {
    --background: rgba(var(--ion-color-primary-rgb), 0.3);
    color: var(--ion-color-primary-tint);
    font-weight: var(--font-bold);
}

ion-modal.modal-footer {
    --height: auto;
    --min-height: 42px;
    --ion-backdrop-color: transparent;
    --overflow: visible;
}